.workflow-editor {
  display: flex;
  width: 100%;
  height: 100%;
}

.workflow-canvas {
  flex: 1;
  height: 100%;
  position: relative;
  transition: margin-left 0.3s ease;
}


/* Drag and Drop Visual Feedback */
.workflow-canvas.drag-over {
  background-color: rgba(79, 70, 229, 0.05);
  transition: background-color 0.2s ease;
}

.workflow-canvas.drag-over::after {
  content: 'Drop here to add node';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--primary-color);
  color: white;
  padding: 12px 24px;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  pointer-events: none;
  z-index: 1000;
  box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);
  animation: bounce-in 0.2s ease-out;
}

@keyframes bounce-in {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* MiniMap Styling */
.react-flow__minimap {
  position: absolute !important;
  bottom: 16px !important;
  right: 16px !important;
  width: 200px !important;
  height: 150px !important;
  border: 2px solid var(--border-color) !important;
  border-radius: 8px !important;
  background-color: var(--surface-color) !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
  z-index: 10 !important;
  overflow: hidden !important;
}

.react-flow__minimap-mask {
  fill: rgba(79, 70, 229, 0.08) !important;
  stroke: var(--primary-color) !important;
  stroke-width: 1 !important;
  stroke-opacity: 0.6 !important;
}

.react-flow__minimap-node {
  fill: var(--text-secondary) !important;
  stroke: var(--border-color) !important;
  stroke-width: 1 !important;
}

/* Different colors for different node types in minimap */
.react-flow__minimap .react-flow__node-start {
  fill: var(--success-color) !important;
}

.react-flow__minimap .react-flow__node-end {
  fill: var(--danger-color) !important;
}

.react-flow__minimap .react-flow__node-operation {
  fill: var(--primary-color) !important;
}

.react-flow__minimap .react-flow__node-switch {
  fill: var(--warning-color) !important;
}

.react-flow__minimap .react-flow__node-event {
  fill: var(--info-color) !important;
}

.react-flow__minimap .react-flow__node-sleep {
  fill: var(--text-secondary) !important;
}

/* Project Manager Overlay */
.project-manager-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.project-manager-modal {
  background: white;
  border-radius: 12px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  width: 90%;
  max-width: 800px;
  height: 80%;
  max-height: 600px;
  position: relative;
  overflow: hidden;
}

.close-project-manager {
  position: absolute;
  top: 16px;
  right: 16px;
  background: #f3f4f6;
  border: none;
  border-radius: 6px;
  width: 32px;
  height: 32px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 18px;
  color: #6b7280;
  transition: all 0.2s ease;
  z-index: 10;
}

.close-project-manager:hover {
  background: #e5e7eb;
  color: #374151;
}

/* Responsive project manager modal */
@media (max-width: 768px) {
  .project-manager-modal {
    width: 95%;
    height: 90%;
    max-width: none;
    max-height: none;
    border-radius: 8px;
  }
  
  .close-project-manager {
    top: 12px;
    right: 12px;
    width: 28px;
    height: 28px;
    font-size: 16px;
  }
}

@media (max-width: 480px) {
  .project-manager-modal {
    width: 100%;
    height: 100%;
    border-radius: 0;
  }
  
  .close-project-manager {
    top: 8px;
    right: 8px;
  }
}

/* Project manager animations */
.project-manager-overlay {
  animation: fade-in 0.2s ease-out;
}

.project-manager-modal {
  animation: slide-up 0.3s ease-out;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-up {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Improved drag and drop styles */
.workflow-canvas.drag-over::after {
  content: 'üìÅ Drop here to add node';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
  color: white;
  padding: 16px 24px;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  pointer-events: none;
  z-index: 1000;
  box-shadow: 0 8px 32px rgba(99, 102, 241, 0.4);
  animation: bounce-in 0.3s ease-out;
}

@keyframes bounce-in {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.05);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Edge Styles */
.react-flow__edge.edge-animated .react-flow__edge-path {
  stroke-dasharray: 5, 5;
  animation: flow-forward 1s linear infinite;
}

.react-flow__edge.edge-error .react-flow__edge-path {
  stroke: rgba(239, 68, 68, 0.4);
  stroke-width: 2;
  stroke-dasharray: 5, 5;
  animation: dash 1s linear infinite;
}

.react-flow__edge.edge-error .react-flow__edge-text {
  fill: rgba(239, 68, 68, 0.6);
  font-weight: 500;
  font-size: 12px;
}

.react-flow__edge.edge-error .react-flow__arrowhead {
  fill: rgba(239, 68, 68, 0.4);
}

.react-flow__edge.edge-simple .react-flow__edge-path {
  stroke: var(--success-color);
  stroke-width: 2;
}

.react-flow__edge.edge-condition .react-flow__edge-path {
  stroke: var(--warning-color);
  stroke-width: 2;
}

.react-flow__edge.edge-default .react-flow__edge-path {
  stroke: #6b7280;
  stroke-width: 2;
}

.react-flow__edge.edge-end .react-flow__edge-path {
  stroke: rgba(239, 68, 68, 0.7);
  stroke-width: 3;
}

@keyframes flow-forward {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: -10;
  }
}

@keyframes dash {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: -20;
  }
}
